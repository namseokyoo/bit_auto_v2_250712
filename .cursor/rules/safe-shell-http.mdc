---
alwaysApply: false
description: 안전한 curl/JSON POST 패턴과 긴 원라인 명령 작성 가이드
---
# 안전한 쉘 HTTP 호출 규칙

- 긴 원라인 내부에서 JSON을 직접 인라인하지 말고 변수 또는 here-doc을 사용하세요.
- 실패한 요청이 숨지 않도록 옵션을 추가하세요: `--fail-with-body`, `--max-time 10`, `-sS`.
- 단계 사이에 `echo`로 경계 라벨을 출력하세요.

## 권장 패턴(변수)
```bash
bash -lc 'set -euo pipefail; HOST=http://158.180.82.112:8080; \
  echo "--- STATUS BEFORE ---"; curl -sS --max-time 10 "$HOST/api/system/status"; echo; \
  echo "--- ENABLE SYSTEM ---"; ENABLE_JSON=$(printf "{\"action\":\"enable\"}"); \
  curl -sS --fail-with-body --max-time 10 -X POST -H "Content-Type: application/json" -d "$ENABLE_JSON" "$HOST/api/system/toggle"; echo; \
  sleep 1; echo "--- STATUS AFTER ---"; curl -sS --max-time 10 "$HOST/api/system/status"; echo; \
  echo "--- BUY 5100 ---"; BUY_JSON=$(printf "{\"action\":\"buy\",\"amount\":5100}"); \
  curl -sS --fail-with-body --max-time 10 -X POST -H "Content-Type: application/json" -d "$BUY_JSON" "$HOST/api/manual_trading/execute"; echo; \
  sleep 3; echo "--- BALANCE ---"; curl -sS --max-time 10 "$HOST/api/balance"; echo; \
  echo "--- TRADES 1d ---"; curl -sS --max-time 10 "$HOST/api/trades?days=1"; echo'
```

## 권장 패턴(here‑doc)
```bash
bash -lc 'set -euo pipefail; HOST=http://127.0.0.1:9000; \
  curl -sS --fail-with-body --max-time 10 -X POST -H "Content-Type: application/json" --data @- "$HOST/api/system/toggle" <<JSON
{"action":"enable"}
JSON'
```

## 참고
- 프록시/배포 스크립트: [deploy.sh](mdc:deploy.sh)
- 서버 앱: [web/app.py](mdc:web/app.py)
- Nginx 프록시(8080→9000) 사용 시 JSON 본문이 깨지지 않도록 헤더 전달을 보장하세요.

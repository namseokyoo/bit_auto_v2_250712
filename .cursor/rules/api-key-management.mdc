---
alwaysApply: true
description: API 키 관리 및 보안 가이드라인
---

# API 키 관리 및 보안

## API 키 저장 위치
- **서버**: `/opt/bitcoin_auto_trading/config/.env` (절대 경로)
- **로컬**: `.env` (프로젝트 루트)
- **템플릿**: `.env.template` (배포용 템플릿)

## API 키 변수명
```bash
# Upbit API 키 (필수)
UPBIT_ACCESS_KEY=your_access_key_here
UPBIT_SECRET_KEY=your_secret_key_here

# Flask 시크릿 키 (필수)
FLASK_SECRET_KEY=your_flask_secret_key_here

# 서버 설정 (선택)
FLASK_HOST=0.0.0.0
FLASK_PORT=8080
```

## API 키 검증 방법
1. **서버에서 직접 확인**:
   ```bash
   ssh -i ssh-key-2025-07-14.key ubuntu@158.180.82.112 "cd /opt/bitcoin_auto_trading && cat config/.env | grep UPBIT"
   ```

2. **API 키 유효성 테스트**:
   ```bash
   curl -H "Authorization: Bearer YOUR_ACCESS_KEY" https://api.upbit.com/v1/accounts
   ```

## 문제 해결 순서
1. **API 키 존재 확인**: 서버의 `.env` 파일에 키가 있는지 확인
2. **API 키 형식 확인**: 공백, 줄바꿈, 따옴표 등 특수문자 확인
3. **API 키 권한 확인**: Upbit에서 API 키 권한 설정 확인
4. **네트워크 연결 확인**: 서버에서 Upbit API 접근 가능 여부 확인
5. **로그 확인**: 상세 오류 메시지 확인

## 보안 주의사항
- **절대 하드코딩 금지**: 코드에 API 키를 직접 작성하지 않음
- **Git 커밋 금지**: `.env` 파일은 `.gitignore`에 포함
- **권한 최소화**: Upbit API 키는 필요한 권한만 부여
- **정기 갱신**: API 키를 정기적으로 갱신

## 모의 거래 모드
API 키가 없거나 오류 시 자동으로 모의 거래 모드로 전환됩니다.
- 실거래 대신 시뮬레이션 거래 실행
- 실제 자금 손실 없이 전략 테스트 가능
- 모든 기능은 정상 동작하지만 실제 거래는 발생하지 않음
name: Auto Deploy to Oracle Cloud

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '*.md'
      - 'docs/**'
      - '.gitignore'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        else
          pip install pyupbit pandas numpy redis apscheduler httpx psutil pyyaml flask flask-cors python-dotenv scikit-learn ta
        fi
    
    - name: Basic syntax check
      run: |
        for file in *.py; do
          if [ -f "$file" ]; then
            echo "Checking $file..."
            python -m py_compile "$file" || echo "Warning: $file has syntax issues"
          fi
        done
    
    - name: Verify trading_config.json exists
      run: |
        test -f config/trading_config.json && echo "trading_config.json present" || (echo "missing trading_config.json" && exit 1)

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup SSH
      env:
        SSH_KEY: ${{ secrets.ORACLE_SSH_KEY }}
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H ${{ secrets.ORACLE_HOST }} >> ~/.ssh/known_hosts 2>/dev/null || true
    
    - name: Deploy to Oracle Server
      env:
        HOST: ${{ secrets.ORACLE_HOST }}
        USER: ${{ secrets.ORACLE_USER }}
      run: |
        # 배포 스크립트를 서버로 복사
        scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no deploy.sh $USER@$HOST:/tmp/
        
        # 배포 실행
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $USER@$HOST "bash /tmp/deploy.sh"
    
    - name: Verify Deployment
      env:
        HOST: ${{ secrets.ORACLE_HOST }}
        USER: ${{ secrets.ORACLE_USER }}
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $USER@$HOST "ps aux | grep -E 'gunicorn|bitcoin-trading' | grep -v grep || echo 'No processes found'"
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $USER@$HOST "curl -s -o /dev/null -w '%{http_code}' http://localhost:9000/health" || echo "Dashboard not accessible"
    
    - name: Health Check
      if: always()
      env:
        HOST: ${{ secrets.ORACLE_HOST }}
        USER: ${{ secrets.ORACLE_USER }}
      run: |
        echo "=== Deployment Status ==="
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $USER@$HOST "
          echo 'Active Python Processes:'
          ps aux | grep python | grep -v grep | wc -l
          echo ''
          echo 'Dashboard Status:'
          curl -s http://localhost:9000/health | python3 -m json.tool || echo 'Dashboard not responding'
          echo ''
          echo 'Recent Logs:'
          tail -n 5 /home/ubuntu/bit_auto_v2/logs/dashboard.log 2>/dev/null || echo 'No dashboard logs'
        "